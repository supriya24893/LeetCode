Table: Customers

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| customer_id   | int     |
| name          | varchar |
+---------------+---------+
customer_id is the primary key for this table.
This table contains information about the customers.
 

Table: Orders

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| order_id      | int     |
| order_date    | date    |
| customer_id   | int     |
| product_id    | int     |
+---------------+---------+
order_id is the primary key for this table.
This table contains information about the orders made by customer_id.
No customer will order the same product more than once in a single day.
 

Table: Products

+---------------+---------+
| Column Name   | Type    |
+---------------+---------+
| product_id    | int     |
| product_name  | varchar |
| price         | int     |
+---------------+---------+
product_id is the primary key for this table.
This table contains information about the products.
 

Write an SQL query to find the most frequently ordered product(s) for each customer.

The result table should have the product_id and product_name for each customer_id who ordered at least one order.

Return the result table in any order.


select customer_id,product_id, product_name
from
(select distinct customer_id, product_id, product_name, dense_rank() over (partition by customer_id order by prod_freq desc ) as rank
from
(select *, count(product_id) over (partition by customer_id, product_id order by customer_id) as prod_freq
from
(select c.customer_id, c.name, o.order_id, o.product_id, p.product_name
from Customers as c
join Orders as o
on c.customer_id=o.customer_id
join
Products as p
on o.product_id=p.product_id) as t1) as t2) as t3
where rank=1
